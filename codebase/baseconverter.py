# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'BaseConverter.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from unicodedata import decimal
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(350, 200)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.submitButton = QtWidgets.QPushButton(self.centralwidget)
        self.submitButton.setGeometry(QtCore.QRect(250, 120, 51, 20))
        self.submitButton.setObjectName("submitButton")
        self.submitButton.clicked.connect(self.submitted)

        self.originLabel = QtWidgets.QLabel(self.centralwidget)
        self.originLabel.setGeometry(QtCore.QRect(10, 10, 61, 16))

        font = QtGui.QFont()
        font.setFamily("Menlo")
        font.setPointSize(14)

        self.originLabel.setFont(font)
        self.originLabel.setObjectName("originLabel")

        self.targetLabel = QtWidgets.QLabel(self.centralwidget)
        self.targetLabel.setGeometry(QtCore.QRect(10, 120, 61, 16))

        font = QtGui.QFont()
        font.setFamily("Menlo")
        font.setPointSize(14)

        self.targetLabel.setFont(font)
        self.targetLabel.setObjectName("targetLabel")

        self.originSpinBox = QtWidgets.QSpinBox(self.centralwidget)
        self.originSpinBox.setGeometry(QtCore.QRect(100, 50, 41, 21))
        self.originSpinBox.setObjectName("originSpinBox")

        self.targetSpinBox = QtWidgets.QSpinBox(self.centralwidget)
        self.targetSpinBox.setGeometry(QtCore.QRect(260, 50, 41, 21))
        self.targetSpinBox.setObjectName("targetSpinBox")

        self.baseLabel = QtWidgets.QLabel(self.centralwidget)
        self.baseLabel.setGeometry(QtCore.QRect(10, 50, 41, 16))

        font = QtGui.QFont()
        font.setFamily("Menlo")
        font.setPointSize(14)

        self.baseLabel.setFont(font)
        self.baseLabel.setObjectName("baseLabel")

        self.toLabel = QtWidgets.QLabel(self.centralwidget)
        self.toLabel.setGeometry(QtCore.QRect(190, 50, 16, 16))

        font = QtGui.QFont()
        font.setFamily("Menlo")
        font.setPointSize(14)

        self.toLabel.setFont(font)
        self.toLabel.setObjectName("toLabel")

        self.originLine = QtWidgets.QLineEdit(self.centralwidget)
        self.originLine.setGeometry(QtCore.QRect(80, 10, 131, 21))
        self.originLine.setPlaceholderText("")
        self.originLine.setObjectName("originLine")

        self.targetLine = QtWidgets.QLineEdit(self.centralwidget)
        self.targetLine.setGeometry(QtCore.QRect(80, 120, 131, 21))
        self.targetLine.setReadOnly(True)
        self.targetLine.setObjectName("targetLine")

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.submitButton.setText(_translate("MainWindow", "Submit"))
        self.originLabel.setText(_translate("MainWindow", "Origin:"))
        self.targetLabel.setText(_translate("MainWindow", "Target:"))
        self.baseLabel.setText(_translate("MainWindow", "Base:"))
        self.toLabel.setText(_translate("MainWindow", "to"))

    def submitted(self):
        self.targetLine.setText(str(self.convert()))

    # TO-DO: Fix conversion method, for example (base 6) 55 to (base 9)
    # Base 6 to decimal calculation:

    # (base 6) 55 = (5 × 6^1) + (5 × 6^0) = (base 10) 35

    # Decimal to base 9 calculation:

    # Divide by the base to get the digits from the remainders:

    # 35 % 9 = 8
    # 3 % 9 = 3

    # store in list -> reverse

    # = (base 9) 38

    # && reconfig for integers

    def convert(self):
        originValue = float(self.originLine.text())
        originBase = float(self.originSpinBox.value())
        targetBase = float(self.targetSpinBox.value())

        if(originBase != 10):
            originValue = self.convertToBase10()
        
        targetValue = []

        while (originValue >= 0.99): 
            mod = originValue % targetBase
            mod = mod.__floor__()
            targetValue.append(mod)
            originValue = originValue / targetBase

        targetValue.reverse()

        print(targetValue)
        result = targetValue
        
        return result

    def convertToBase10(self):
        originValue = self.originLine.text()
        originBase = float(self.originSpinBox.value())

        numArr = [float(num) for num in originValue]

        i = len(numArr) - 1
        j, decimalized = 0, 0

        for element in range(len(numArr)):
            decimalized += numArr[j] * (originBase **i)
            i-=1
            j+=1

        return decimalized




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

    # TO-DO: add error handling for invalid input